workflow:
  name: "workflow-nba-embeds"
  title: "NBA Embeds"
  description: "Workflow to generate content for NBA."
  context-variables:
    debugger:
      enabled: true
    sportradar-nba:
      sportradar_api_key: "$TEMP_CONTEXT_VARIABLE_SPORTRADAR_SOCCER_V4_API_KEY"
    machina-ai:
      api_key: "$TEMP_CONTEXT_VARIABLE_SDK_OPENAI_API_KEY"
  inputs:
    event_code: "$.get('event_code') or None"
  outputs:
    events: "$.get('events')"
    workflow-status: "$.get('event_exists') is not True and 'skipped' or 'executed'"
  
  tasks:
    
    # 0 load-event-by-code
    - type: "document"
      name: "load-event-by-code"
      description: "Search event (sportradar) by code."
      condition: "$.get('event_code') is not None"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["start_time", 1]
      filters:
        metadata.event_code: "$.get('event_code')"
      inputs:
        name: "{'$in': ['nba-game']}"
      outputs:
        event_exists: "len($.get('documents', [])) > 0"
        event_selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        event_type: "$.get('documents')[0].get('name') if $.get('documents') else None"

    # 1 load-event-by-schedule
    - type: "document"
      name: "load-event-by-schedule"
      description: "Search for schedule events (sportradar)."
      condition: "$.get('event_exists') is not True"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["start_time", 1]
      filters:
        value.processed: "'idle'"
      inputs:
        name: "{'$in': ['nba-game']}"
      outputs:
        event_exists: "len($.get('documents', [])) > 0"
        event_selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        event_type: "$.get('documents')[0].get('name') if $.get('documents') else None"

    # 2 sportradar-nba-mapping
    - type: "mapping"
      name: "sportradar-nba-event-mapping"
      description: "Transform the sportradar nba data"
      condition: "$.get('event_exists') is True"
      inputs:
        item: "$.get('event_selected')"
      outputs:
        event_code: "$.get('event_code')"
        stats_count: "$.get('research_stats_count')"
        season_type: "$.get('season_type')"
        season_year: "$.get('season_year')"
        team_home_name: "$.get('team_home_name')"
        team_away_name: "$.get('team_away_name')"
        team_home_id: "$.get('team_home_id')"
        team_away_id: "$.get('team_away_id')"
        title: "$.get('title')"

    # 3 version-control-update-nba-game
    - type: "document"
      name: "version-control-update-nba-game"
      description: "Update the events document version control."
      condition: "$.get('event_exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        nba-game: |
          {
            **$.get('event_selected'),
            'processed': 'processing'
          }
      metadata:
        event_code: "$.get('event_code')"
    
    # 4 fetch-event-details
    - type: "connector"
      name: "fetch-event-details"
      description: "Get a event details from SportRadar" 
      condition: "$.get('event_exists') is True"
      connector:
        name: "sportradar-nba"
        command: "get-games/{game_id}/{data_type}"
        command_attribute:
          game_id: "$.get('event_code')"
          data_type: "'summary.json'"
      inputs:
        api_key: "$.get('sportradar_api_key')"
      outputs:
        event_details: "$"

    # 5 sportradar-nba-event-mapping
    - type: "mapping"
      name: "sportradar-nba-event-details-mapping"
      description: "Transform the sportradar nba data"
      condition: "$.get('event_exists') is True"
      inputs:
        item: "$.get('event_details')"
      outputs:
        away_stats: "$.get('away_stats')"
        away_scoring: "$.get('away_scoring')"
        home_stats: "$.get('home_stats')"
        home_scoring: "$.get('home_scoring')"

    # 6 prompt-embed-nba-game-details
    - type: "prompt"
      name: "nba-event-details-prompt"
      description: "Embed event details."
      condition: "$.get('event_exists') is True"
      connector:
        name: "machina-ai"
        command: "invoke_prompt"
        model: "gpt-4o"
      inputs:
        title: "$.get('title')"
        team_home_name: "$.get('team_home_name')"
        team_away_name: "$.get('team_away_name')"
        home_stats: "$.get('home_stats')"
        away_stats: "$.get('away_stats')"
        home_scoring: "$.get('home_scoring')"
        away_scoring: "$.get('away_scoring')"
      outputs:
        research-event-details: "$"
        research-event-details-bulk: |
          [
            {
              'subject': '$.(title)',
              'text': c.get('content', ''),
              'title': f"$.(title) - {c.get('title', '')}",
              'metadata': {
                'event_code': '$.(event_code)',
                'language': 'en'
              }
            }
            for c in $.get('snippets', [])
          ]

    # 7 update-snippets
    - type: "document"
      name: "update-snippets"
      condition: "$.get('event_exists') is True"
      description: "Update the snippets."
      config:
        action: "bulk-save"
        embed-vector: true
        force-update: true
      connector:
        name: "machina-ai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      document_name: "content-snippet"
      documents:
        items: "$.get('parsed-items')"
      inputs:
        parsed-items: |
          [
            *$.get('research-event-details-bulk', [])
          ]

    # 8 version-control-success-nba-game
    - type: "document"
      name: "version-control-success-nba-game"
      description: "Update the events document version control."
      condition: "$.get('event_exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        nba-game: |
          {
            **$.get('event_selected'),
            'processed': 'processed'
          }
      metadata:
        event_code: "$.get('event_code')"